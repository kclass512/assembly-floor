import{d as V,r as h,o as B,c as W,w as b,e as r,A as I,B as A,k as m,g}from"./index-a24ea7c7.js";const C=V({__name:"BOMTable",setup(L,{expose:T}){const c=h(!1),_=h([]),f=h([]),w=h([]),k=()=>{let a=[],n=[],e=[],l=I.instance.doc.getAllTypeElement(A.Floor);for(const t of l)if(t.assemblyFloors)for(const i of t.assemblyFloors){let o=D(i),p=R(i);if(p)for(const d of p)a.push(d),o.weight+=d.weight,o.rebarWeight+=d.weight;let u=v(i);if(u)for(const d of u)n.push(d),o.weight+d.weight,o.rebarWeight+=d.weight;o.rebarWeight=s(o.rebarWeight),o.rebarVolume=s(o.rebarWeight/m.RebarDensity*1e6),o.weight/=1e3,o.weight=s(o.weight),e.push(o)}_.value=a,f.value=n,w.value=e},R=a=>{if(a!=null&&a.girderRebars!=null&&a.girderRebars.length>0){let n=[],e=new Map;for(const l of a.girderRebars){let t;e.has(l.length)?t=e.get(l.length):(t=[],e.set(l.length,t)),t.push(l)}for(const l of e.keys()){let t=e.get(l);t.length>0&&n.push({id:a.uniqueId,name:a.name,type:t[0].girderType.type,singleLength:l,amount:t.length,totalLength:t.length*l,weight:s(t[0].weight*t.length)})}return n}return null},v=a=>{if(a!=null&&a.shiftRebars!=null&&a.shiftRebars.length>0){let n=[],e=new Map;for(const l of a.shiftRebars){let t;e.has(l.diameter)?t=e.get(l.diameter):(t=[],e.set(l.diameter,t)),t.push(l)}for(const l of a.stressRebars){let t;e.has(l.diameter)?t=e.get(l.diameter):(t=[],e.set(l.diameter,t)),t.push(l)}for(const l of e.keys()){let t=e.get(l);if(t.length>0){let i=0,o=0;for(const p of t){i+=p.weight;let u=p.diameter/10/2;o+=p.length/10*Math.PI*u*u}n.push({id:a.uniqueId,name:a.name,diameter:t[0].diameter,weight:s(i),volume:s(o),density:m.RebarDensity})}}return n}return null},D=a=>({id:a.uniqueId,name:a.name,level:a.level.name,area:0,volume:s(a.volume),weight:a.volume*2500,rebarWeight:0,length:s(a.length),width:s(a.width),amount:1,rebarVolume:0,rebarDensity:m.RebarDensity,concreteDensity:2500});function s(a){return Math.round(a*1e3)/1e3}const y=({row:a,column:n,rowIndex:e,columnIndex:l})=>{if(l===0){const t=M(f.value).one[e],i=t>0?1:0;return{rowspan:t,colspan:i}}};T({dialogVisible:c,showData:k,getGirderRebarTableData:R,getRebarTableData:v,getAssemblyFloorTableData:D});function M(a){let n=[],e=0;return a.forEach((l,t)=>{t===0?n.push(1):l.id===a[t-1].id?(n[e]+=1,n.push(0)):(n.push(1),e=t)}),{one:n}}return(a,n)=>{const e=g("el-table-column"),l=g("el-table"),t=g("el-tab-pane"),i=g("el-tabs"),o=g("el-dialog");return B(),W(o,{modelValue:c.value,"onUpdate:modelValue":n[0]||(n[0]=p=>c.value=p),title:"Bom表",width:"80%"},{default:b(()=>[r(i,{type:"border-card"},{default:b(()=>[r(t,{label:"桁架明细表"},{default:b(()=>[r(l,{data:_.value,border:"",style:{width:"100%"}},{default:b(()=>[r(e,{prop:"name",label:"部件名称"}),r(e,{prop:"type",label:"类型"}),r(e,{prop:"singleLength",label:"单根长度(mm)"}),r(e,{prop:"amount",label:"合计"}),r(e,{prop:"totalLength",label:"总长度(mm)"}),r(e,{prop:"weight",label:"桁架质量(kg)"})]),_:1},8,["data"])]),_:1}),r(t,{label:"钢筋明细表"},{default:b(()=>[r(l,{data:f.value,border:"",style:{width:"100%"},"span-method":y},{default:b(()=>[r(e,{prop:"name",label:"部件名称"}),r(e,{prop:"diameter",label:"直径"}),r(e,{prop:"weight",label:"钢筋重量(kg)"}),r(e,{prop:"volume",label:"钢筋体积(cm³)"}),r(e,{prop:"density",label:"钢筋密度(kg/m³)"})]),_:1},8,["data"])]),_:1}),r(t,{label:"零件明细表"},{default:b(()=>[r(l,{data:w.value,border:"",style:{width:"100%"}},{default:b(()=>[r(e,{prop:"name",label:"部件名称"}),r(e,{prop:"level",label:"底部标高"}),r(e,{prop:"area",label:"面积(㎡)"}),r(e,{prop:"volume",label:"构件体积(m³)"}),r(e,{prop:"weight",label:"构件重量(t)"}),r(e,{prop:"rebarWeight",label:"钢筋重量(kg)"}),r(e,{prop:"length",label:"叠合板长度"}),r(e,{prop:"width",label:"叠合板宽度"}),r(e,{prop:"amount",label:"合计"}),r(e,{prop:"rebarVolume",label:"估计的钢筋体积(cm³)"}),r(e,{prop:"rebarDensity",label:"钢筋密度(kg/m³)"}),r(e,{prop:"concreteDensity",label:"混凝土密度(kg/m³)"})]),_:1},8,["data"])]),_:1})]),_:1})]),_:1},8,["modelValue"])}}});export{C as default};
