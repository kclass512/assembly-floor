import{d as L,r as m,o as q,c as x,w as s,e as a,A as C,B as O,k as v,g as f}from"./index-be16815d.js";const j=L({__name:"BOMTable",setup(E,{expose:I}){const w=m(!1),D=m([]),_=m([]),R=m([]),y=m([]),W=()=>{let l=[],o=[],e=[],r=[],t=new Map,b=C.instance.doc.getAllTypeElement(O.Floor);for(const p of b)if(p.assemblyFloors)for(const d of p.assemblyFloors){let n=M(d),V=k(d);if(V)for(const h of V)l.push(h),n.weight+=h.weight,n.rebarWeight+=h.weight;let B=T(d);if(B)for(const h of B)o.push(h),n.weight+h.weight,n.rebarWeight+=h.weight;n.rebarWeight=i(n.rebarWeight),n.rebarVolume=i(n.rebarWeight/v.RebarDensity*1e6),n.weight/=1e3,n.weight=i(n.weight),e.push(n);let g;n.width<n.length?g=n.width.toString()+"_"+n.length.toString():g=n.length.toString()+"_"+n.width.toString();let c;t.has(g)?(c=t.get(g),c.amount+=1):(c={number:0,area:n.area,volume:n.volume,length:n.length,width:n.width,amount:1},t.set(g,c))}let u=0;for(const p of t.values())p.number=u++,r.push(p);D.value=l,_.value=o,R.value=e,y.value=r},k=l=>{if(l!=null&&l.girderRebars!=null&&l.girderRebars.length>0){let o=[],e=new Map;for(const r of l.girderRebars){let t;e.has(r.length)?t=e.get(r.length):(t=[],e.set(r.length,t)),t.push(r)}for(const r of e.keys()){let t=e.get(r);t.length>0&&o.push({id:l.uniqueId,name:l.name,type:t[0].girderType.type,singleLength:r,amount:t.length,totalLength:t.length*r,weight:i(t[0].weight*t.length)})}return o}return null},T=l=>{if(l!=null&&l.shiftRebars!=null&&l.shiftRebars.length>0){let o=[],e=new Map;for(const r of l.shiftRebars){let t;e.has(r.diameter)?t=e.get(r.diameter):(t=[],e.set(r.diameter,t)),t.push(r)}for(const r of l.stressRebars){let t;e.has(r.diameter)?t=e.get(r.diameter):(t=[],e.set(r.diameter,t)),t.push(r)}for(const r of e.keys()){let t=e.get(r);if(t.length>0){let b=0,u=0,p=0;for(const d of t){b+=d.weight;let n=d.diameter/10/2;u+=d.length/10*Math.PI*n*n,p+=d.length}o.push({id:l.uniqueId,name:l.name,diameter:t[0].diameter,length:i(p/1e3),weight:i(b),volume:i(u),density:v.RebarDensity})}}return o}return null},M=l=>({id:l.uniqueId,name:l.name,level:l.level.name,area:i(l.area),volume:i(l.volume),weight:l.volume*2500,rebarWeight:0,length:i(l.length),width:i(l.width),amount:1,rebarVolume:0,rebarDensity:v.RebarDensity,concreteDensity:2500});function i(l){return Math.round(l*1e3)/1e3}const A=({row:l,column:o,rowIndex:e,columnIndex:r})=>{if(r===0){const t=S(_.value).one[e],b=t>0?1:0;return{rowspan:t,colspan:b}}};I({dialogVisible:w,showData:W,getGirderRebarTableData:k,getRebarTableData:T,getAssemblyFloorTableData:M});function S(l){let o=[],e=0;return l.forEach((r,t)=>{t===0?o.push(1):r.id===l[t-1].id?(o[e]+=1,o.push(0)):(o.push(1),e=t)}),{one:o}}return(l,o)=>{const e=f("el-table-column"),r=f("el-table"),t=f("el-tab-pane"),b=f("el-tabs"),u=f("el-dialog");return q(),x(u,{modelValue:w.value,"onUpdate:modelValue":o[0]||(o[0]=p=>w.value=p),title:"Bom表",width:"80%"},{default:s(()=>[a(b,{type:"border-card"},{default:s(()=>[a(t,{label:"桁架明细表"},{default:s(()=>[a(r,{data:D.value,border:"",style:{width:"100%"}},{default:s(()=>[a(e,{prop:"name",label:"部件名称"}),a(e,{prop:"type",label:"类型"}),a(e,{prop:"singleLength",label:"单根长度(mm)"}),a(e,{prop:"amount",label:"合计"}),a(e,{prop:"totalLength",label:"总长度(mm)"}),a(e,{prop:"weight",label:"桁架质量(kg)"})]),_:1},8,["data"])]),_:1}),a(t,{label:"钢筋明细表"},{default:s(()=>[a(r,{data:_.value,border:"",style:{width:"100%"},"span-method":A},{default:s(()=>[a(e,{prop:"name",label:"部件名称"}),a(e,{prop:"diameter",label:"直径"}),a(e,{prop:"length",label:"钢筋长度(m)"}),a(e,{prop:"weight",label:"钢筋重量(kg)"}),a(e,{prop:"volume",label:"钢筋体积(cm³)"}),a(e,{prop:"density",label:"钢筋密度(kg/m³)"})]),_:1},8,["data"])]),_:1}),a(t,{label:"零件明细表"},{default:s(()=>[a(r,{data:R.value,border:"",style:{width:"100%"}},{default:s(()=>[a(e,{prop:"name",label:"部件名称"}),a(e,{prop:"level",label:"底部标高"}),a(e,{prop:"area",label:"面积(㎡)"}),a(e,{prop:"volume",label:"构件体积(m³)"}),a(e,{prop:"weight",label:"构件重量(t)"}),a(e,{prop:"rebarWeight",label:"钢筋重量(kg)"}),a(e,{prop:"length",label:"叠合板长度(mm)"}),a(e,{prop:"width",label:"叠合板宽度(mm)"}),a(e,{prop:"amount",label:"合计"}),a(e,{prop:"rebarVolume",label:"估计的钢筋体积(cm³)"}),a(e,{prop:"rebarDensity",label:"钢筋密度(kg/m³)"}),a(e,{prop:"concreteDensity",label:"混凝土密度(kg/m³)"})]),_:1},8,["data"])]),_:1}),a(t,{label:"叠合板统计表"},{default:s(()=>[a(r,{data:y.value,border:"",style:{width:"100%"}},{default:s(()=>[a(e,{prop:"number",label:"叠合板序号"}),a(e,{prop:"area",label:"面积(㎡)"}),a(e,{prop:"volume",label:"体积(m³)"}),a(e,{prop:"length",label:"叠合板长度(mm)"}),a(e,{prop:"width",label:"叠合板宽度(mm)"}),a(e,{prop:"amount",label:"数量"})]),_:1},8,["data"])]),_:1})]),_:1})]),_:1},8,["modelValue"])}}});export{j as default};
